#!/bin/bash
set -e

PMEM_MNT=/inception/mnt
#MEM=220G
MEM=100G
NCPU=$(cat /proc/cpuinfo  | grep processor | wc -l)

QEMU="qemu-system-x86_64"

KERNEL_PARAM='console=ttyS0 ip=dhcp quiet'
KERNEL_PARAM+=' '

mkfifo /inception/monitor_pipe.in /inception/monitor_pipe.out
mkdir -p $PMEM_MNT

while [ ! -b /dev/pmem0 ]; do
	sleep 0.1
done

if [ -z "$1" ] && fsck.ext4 -n /dev/pmem0; then
	# Filesystem exists, this is live migration case
	# In place live migration case
	INCOMING="-incoming defer"
	mount -o dax /dev/pmem0 $PMEM_MNT
else
	wipefs -f -a /dev/pmem0
	mkfs.ext4 -F -m 0 -O ^has_journal /dev/pmem0
	mount -o dax /dev/pmem0 $PMEM_MNT
	cp /inception/sample_vm_bzImage $PMEM_MNT/
fi

${QEMU}											\
	-m $MEM										\
	-object memory-backend-file,id=mem,size=$MEM,mem-path=$PMEM_MNT/vm_mem,share=on	\
	-numa node,memdev=mem,nodeid=0							\
	-smp $NCPU									\
	-machine q35 									\
	-nographic									\
	-enable-kvm -cpu host								\
	-kernel $PMEM_MNT/sample_vm_bzImage						\
	-netdev user,hostfwd=tcp::5000-:22,id=netdev0					\
	-device virtio-net-pci,netdev=netdev0						\
	-chardev pipe,id=mon0,path=/inception/monitor_pipe				\
	-mon chardev=mon0,mode=readline							\
	-chardev stdio,mux=off,id=char0,signal=off					\
	-serial chardev:char0								\
	$INCOMING									\
	-append "$KERNEL_PARAM"

umount $PMEM_MNT
rmdir $PMEM_MNT
rm /inception/monitor_pipe.in /inception/monitor_pipe.out
